functions:
- id: check-flow
  workflow: check
  type: subflow
- id: run-tests
  workflow: /test/test
  type: subflow
- id: create-flow
  type: subflow
  workflow: nginx-action

states:

# theiw flow needs a name for the instance and an owner
- id: validate-input
  type: validate
  schema:
    title: New Nginx Server
    type: object
    required: ["name"]
    properties:
      name:
        type: string
  transition: check-backend

- id: check-backend
  type: action
  log: checking available backends for jq(.name)
  action:
    function: check-flow
    input: 
      name: jq(.name)
  transition: can-proceed

- id: can-proceed
  type: switch
  conditions:
  - condition: jq(.return.exists)
    transition: error
  defaultTransition: execute-create

- id: execute-create
  type: action
  action: 
    function: create-flow
    input: 
      name: jq(.name)
      action: apply
  transition: run-tests
  transform:
    ip: jq(.return.return.terraform[3].result.public_ip.value[0][0])
    name: jq(.name)

- id: run-tests
  type: action
  action:
    function: run-tests
    input:
      ip: jq(.ip)
  transition: success
  catch:
  - error: "*"
    transition: error

- id: success
  type: generateEvent
  log: jq(.)
  event:
    type: io.direktiv.nginx
    source: create
    context:
      name: jq(.name)
      success: true
      message: 'nginx jq(.name) http://jq(.ip) created'
    data: 
      name: jq(.name)
      ip: jq(.ip)
      test: jq(.return.test)

  
- id: error
  type: generateEvent
  event:
    type: io.direktiv.nginx
    source: create
    context:
      name: jq(.name)
      success: false
      message: nginx jq(.name) deployment failed
    data: 
      name: jq(.name)

